# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Pqapiv2
  # NotBeforeOrAfter Model.
  class NotBeforeOrAfter < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Transfer is scheduled and will not process before this time.
    # @return [DateTime]
    attr_accessor :not_before

    # Transfer expires if not completed prior to this time.
    # @return [DateTime]
    attr_accessor :not_after

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['not_before'] = 'notBefore'
      @_hash['not_after'] = 'notAfter'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        not_before
        not_after
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(not_before = nil,
                   not_after = nil)
      @not_before = not_before unless not_before == SKIP
      @not_after = not_after unless not_after == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      not_before = if hash.key?('notBefore')
                     (DateTimeHelper.from_rfc3339(hash['notBefore']) if hash['notBefore'])
                   else
                     SKIP
                   end
      not_after = if hash.key?('notAfter')
                    (DateTimeHelper.from_rfc3339(hash['notAfter']) if hash['notAfter'])
                  else
                    SKIP
                  end

      # Create object from extracted values.
      NotBeforeOrAfter.new(not_before,
                           not_after)
    end

    def to_not_before
      DateTimeHelper.to_rfc3339(not_before)
    end

    def to_not_after
      DateTimeHelper.to_rfc3339(not_after)
    end
  end
end
