# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Pqapiv2
  # Hypermedia as the Engine of Application State (HAETOS) parameters used in a
  # query.
  class HaetosParams < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Indicates the HATEOS relationship between the target and current
    # resources.
    # @return [HaetosRelationship]
    attr_accessor :params

    # URL for resource described by the relationship.
    # @return [String]
    attr_accessor :href

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['params'] = 'params'
      @_hash['href'] = 'href'
      @_hash
    end

    # An array for optional fields
    def optionals
      []
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(params = nil,
                   href = nil)
      @params = params unless params == SKIP
      @href = href unless href == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      params = HaetosRelationship.from_hash(hash['params']) if hash['params']
      href = hash.key?('href') ? hash['href'] : SKIP

      # Create object from extracted values.
      HaetosParams.new(params,
                       href)
    end
  end
end
