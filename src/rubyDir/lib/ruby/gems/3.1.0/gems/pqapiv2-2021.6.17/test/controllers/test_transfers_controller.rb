# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class TransfersControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    @response_catcher = HttpResponseCatcher.new
    @controller = TransfersController.new CONFIG, http_call_back: @response_catcher
  end

  # Retrieve details of a specific transfer represented by a transfer token.
  def test_retrieve_transfer()
    # Parameters for the API call
    xfer_token = 'xfer-0fac4aa8-43ac-447e-95f9-827f908a82ff'
    x_my_pay_quicker_version = '2020.02.24'
    page = nil
    page_size = 20
    filter = '\'name\'*\'Fra\'||*\'Ger\',\'numericCode\'>\'5\''
    sort = '-name'
    language = 'en-US'

    # Perform the API call through the SDK function
    result = @controller.retrieve_transfer(xfer_token, x_my_pay_quicker_version, page: page, page_size: page_size, filter: filter, sort: sort, language: language)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(TestHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

  # Accept a transfer quote
  def test_accept_transfer_quote()
    # Parameters for the API call
    xfer_token = 'xfer-0fac4aa8-43ac-447e-95f9-827f908a82ff'
    x_my_pay_quicker_version = '2020.02.24'

    # Perform the API call through the SDK function
    @controller.accept_transfer_quote(xfer_token, x_my_pay_quicker_version)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Optional cancellation that auto-cancels after a period organically expires or when account activity invalidates the quote.
  def test_cancel_transfer_quote()
    # Parameters for the API call
    xfer_token = 'xfer-0fac4aa8-43ac-447e-95f9-827f908a82ff'
    x_my_pay_quicker_version = '2020.02.24'

    # Perform the API call through the SDK function
    @controller.cancel_transfer_quote(xfer_token, x_my_pay_quicker_version)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Retrieve a list of all transfers that supports filtering, sorting, and pagination through existing mechanisms.
  def test_list_transfers()
    # Parameters for the API call
    x_my_pay_quicker_version = '2020.02.24'
    page = nil
    page_size = 20
    filter = '\'name\'*\'Fra\'||*\'Ger\',\'numericCode\'>\'5\''
    sort = '-name'
    language = 'en-US'

    # Perform the API call through the SDK function
    result = @controller.list_transfers(x_my_pay_quicker_version, page: page, page_size: page_size, filter: filter, sort: sort, language: language)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)

    # Test headers
    expected_headers = {}
    expected_headers['x-timezone'] = nil
    expected_headers['x-paging-pageno'] = nil
    expected_headers['x-paging-pagecount'] = nil
    expected_headers['x-paging-pagesize'] = nil
    expected_headers['x-paging-totalrecordcount'] = nil
    expected_headers['content-type'] = 'application/json'

    assert(TestHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

end
