# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Pqapiv2
  # Specifies the validator type for the required bank account information
  class BankAccountRequirementValidator < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [ValidatorTypesEnum]
    attr_accessor :validator_type

    # Validation regular expression
    # @return [String]
    attr_accessor :expression

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['validator_type'] = 'validatorType'
      @_hash['expression'] = 'expression'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        validator_type
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(expression = nil,
                   validator_type = nil)
      @validator_type = validator_type unless validator_type == SKIP
      @expression = expression unless expression == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      expression = hash.key?('expression') ? hash['expression'] : SKIP
      validator_type = hash.key?('validatorType') ? hash['validatorType'] : SKIP

      # Create object from extracted values.
      BankAccountRequirementValidator.new(expression,
                                          validator_type)
    end
  end
end
