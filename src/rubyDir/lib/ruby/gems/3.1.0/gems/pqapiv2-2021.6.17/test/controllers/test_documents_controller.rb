# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class DocumentsControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    @response_catcher = HttpResponseCatcher.new
    @controller = DocumentsController.new CONFIG, http_call_back: @response_catcher
  end

  # Retrieve a list of user documents that supports filtering, sorting, and pagination through existing mechanisms.
  def test_list_user_documents()
    # Parameters for the API call
    user_token = 'user-f012bc86-4d42-415b-a8b2-be5e0b90e59a'
    x_my_pay_quicker_version = '2020.02.24'
    page = nil
    page_size = 20
    filter = '\'name\'*\'Fra\'||*\'Ger\',\'numericCode\'>\'5\''
    sort = '-name'
    language = 'en-US'

    # Perform the API call through the SDK function
    @controller.list_user_documents(user_token, x_my_pay_quicker_version, page: page, page_size: page_size, filter: filter, sort: sort, language: language)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Create a quote for a user document.
  def test_create_user_document()
    # Parameters for the API call
    user_token = 'user-f012bc86-4d42-415b-a8b2-be5e0b90e59a'
    x_my_pay_quicker_version = '2020.02.24'

    # Perform the API call through the SDK function
    @controller.create_user_document(user_token, x_my_pay_quicker_version)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Retrieve an individual user document by its document token.
  def test_retrieve_user_document()
    # Parameters for the API call
    user_token = 'user-f012bc86-4d42-415b-a8b2-be5e0b90e59a'
    docu_token = 'docu-6260c132-5cb1-4e30-8b08-9ce559893acb'
    x_my_pay_quicker_version = '2020.02.24'
    page = nil
    page_size = 20
    filter = '\'name\'*\'Fra\'||*\'Ger\',\'numericCode\'>\'5\''
    sort = '-name'
    language = 'en-US'

    # Perform the API call through the SDK function
    @controller.retrieve_user_document(user_token, docu_token, x_my_pay_quicker_version, page: page, page_size: page_size, filter: filter, sort: sort, language: language)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Replace the user document at the given document token.
  def test_replace_user_document()
    # Parameters for the API call
    user_token = 'user-f012bc86-4d42-415b-a8b2-be5e0b90e59a'
    docu_token = 'docu-6260c132-5cb1-4e30-8b08-9ce559893acb'
    x_my_pay_quicker_version = '2020.02.24'

    # Perform the API call through the SDK function
    @controller.replace_user_document(user_token, docu_token, x_my_pay_quicker_version)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

end
