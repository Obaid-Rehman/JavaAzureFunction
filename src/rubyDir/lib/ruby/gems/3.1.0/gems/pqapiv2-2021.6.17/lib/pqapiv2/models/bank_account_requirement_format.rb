# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Pqapiv2
  # Classifies the format of the required information for a bank account
  class BankAccountRequirementFormat < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Example of a requirement generated from the validator(s)
    # @return [String]
    attr_accessor :example

    # Example of a requirement generated from the validator(s)
    # @return [List of BankAccountRequirementFormatLegend]
    attr_accessor :legend

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['example'] = 'example'
      @_hash['legend'] = 'legend'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        example
        legend
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(example = nil,
                   legend = nil)
      @example = example unless example == SKIP
      @legend = legend unless legend == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      example = hash.key?('example') ? hash['example'] : SKIP
      # Parameter is an array, so we need to iterate through it
      legend = nil
      unless hash['legend'].nil?
        legend = []
        hash['legend'].each do |structure|
          legend << (BankAccountRequirementFormatLegend.from_hash(structure) if structure)
        end
      end

      legend = SKIP unless hash.key?('legend')

      # Create object from extracted values.
      BankAccountRequirementFormat.new(example,
                                       legend)
    end
  end
end
