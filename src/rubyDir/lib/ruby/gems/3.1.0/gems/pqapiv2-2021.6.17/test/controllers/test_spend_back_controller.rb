# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class SpendBackControllerTests < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    @response_catcher = HttpResponseCatcher.new
    @controller = SpendBackController.new CONFIG, http_call_back: @response_catcher
  end

  # Retrieve a single spendback quote using the spendback token.
  def test_retrieve_spendback()
    # Parameters for the API call
    spnd_token = 'spnd-c39437e1-dc80-4293-8211-c14b5a32f762'
    x_my_pay_quicker_version = '2020.02.24'
    page = nil
    page_size = 20
    filter = '\'name\'*\'Fra\'||*\'Ger\',\'numericCode\'>\'5\''
    sort = '-name'
    language = 'en-US'

    # Perform the API call through the SDK function
    @controller.retrieve_spendback(spnd_token, x_my_pay_quicker_version, page: page, page_size: page_size, filter: filter, sort: sort, language: language)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Accept an open spendback quote.
  def test_accept_spendback_quote()
    # Parameters for the API call
    spnd_token = 'spnd-c39437e1-dc80-4293-8211-c14b5a32f762'
    x_my_pay_quicker_version = '2020.02.24'

    # Perform the API call through the SDK function
    @controller.accept_spendback_quote(spnd_token, x_my_pay_quicker_version)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Cancel an open spendback quote.
  def test_cancel_spendback_quote()
    # Parameters for the API call
    spnd_token = 'spnd-c39437e1-dc80-4293-8211-c14b5a32f762'
    x_my_pay_quicker_version = '2020.02.24'

    # Perform the API call through the SDK function
    @controller.cancel_spendback_quote(spnd_token, x_my_pay_quicker_version)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Perform a spendback refund for the full amount.
  def test_refund_spendback_full()
    # Parameters for the API call
    spnd_token = 'spnd-c39437e1-dc80-4293-8211-c14b5a32f762'
    x_my_pay_quicker_version = '2020.02.24'

    # Perform the API call through the SDK function
    @controller.refund_spendback_full(spnd_token, x_my_pay_quicker_version)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Perform a spendback refund for a partial amount.
  def test_refund_spendback_partial()
    # Parameters for the API call
    spnd_token = 'spnd-c39437e1-dc80-4293-8211-c14b5a32f762'
    x_my_pay_quicker_version = '2020.02.24'

    # Perform the API call through the SDK function
    @controller.refund_spendback_partial(spnd_token, x_my_pay_quicker_version)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Retrieve a list of all spendbacks that supports filtering, sorting, and pagination through existing mechanisms.
  def test_list_spend_backs()
    # Parameters for the API call
    x_my_pay_quicker_version = '2020.02.24'
    page = nil
    page_size = 20
    filter = '\'name\'*\'Fra\'||*\'Ger\',\'numericCode\'>\'5\''
    sort = '-name'
    language = 'en-US'

    # Perform the API call through the SDK function
    @controller.list_spend_backs(x_my_pay_quicker_version, page: page, page_size: page_size, filter: filter, sort: sort, language: language)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Create a spendback quote. <i>*Spendbacks can be automatically accepted by setting the `autoAcceptQuote` flag. If not automatically accepted, a POST is required to the spendback endpoint using the token returned in the response. Quotes can be accepted, cancelled, or allowed to expire.</i>
  def test_quote_spendback()
    # Parameters for the API call
    x_my_pay_quicker_version = '2020.02.24'
    body = nil

    # Perform the API call through the SDK function
    @controller.quote_spendback(x_my_pay_quicker_version, body: body)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

end
