# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Pqapiv2
  # Monetary instruments required for the destination
  class DestinationMonetaryRequired < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Amount transferred to the destination
    # @return [Float]
    attr_accessor :destination_amount

    # Currency code type for the object
    # @return [CurrencyTypesEnum]
    attr_accessor :destination_currency

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['destination_amount'] = 'destinationAmount'
      @_hash['destination_currency'] = 'destinationCurrency'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        destination_amount
        destination_currency
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(destination_amount = nil,
                   destination_currency = nil)
      @destination_amount = destination_amount unless destination_amount == SKIP
      @destination_currency = destination_currency unless destination_currency == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      destination_amount =
        hash.key?('destinationAmount') ? hash['destinationAmount'] : SKIP
      destination_currency =
        hash.key?('destinationCurrency') ? hash['destinationCurrency'] : SKIP

      # Create object from extracted values.
      DestinationMonetaryRequired.new(destination_amount,
                                      destination_currency)
    end
  end
end
