# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Pqapiv2
  # Response to the prepaid card data request
  class PrepaidCardDataResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :card_image

    # TODO: Write general description for this method
    # @return [Float]
    attr_accessor :card_number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :cvv_number

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :expiration

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :name_on_card

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :side

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :token

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['card_image'] = 'cardImage'
      @_hash['card_number'] = 'cardNumber'
      @_hash['cvv_number'] = 'cvvNumber'
      @_hash['expiration'] = 'expiration'
      @_hash['name_on_card'] = 'nameOnCard'
      @_hash['side'] = 'side'
      @_hash['token'] = 'token'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        card_image
        card_number
        cvv_number
        expiration
        name_on_card
        side
        token
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(card_image = nil,
                   card_number = nil,
                   cvv_number = nil,
                   expiration = nil,
                   name_on_card = nil,
                   side = nil,
                   token = nil)
      @card_image = card_image unless card_image == SKIP
      @card_number = card_number unless card_number == SKIP
      @cvv_number = cvv_number unless cvv_number == SKIP
      @expiration = expiration unless expiration == SKIP
      @name_on_card = name_on_card unless name_on_card == SKIP
      @side = side unless side == SKIP
      @token = token unless token == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      card_image = hash.key?('cardImage') ? hash['cardImage'] : SKIP
      card_number = hash.key?('cardNumber') ? hash['cardNumber'] : SKIP
      cvv_number = hash.key?('cvvNumber') ? hash['cvvNumber'] : SKIP
      expiration = hash.key?('expiration') ? hash['expiration'] : SKIP
      name_on_card = hash.key?('nameOnCard') ? hash['nameOnCard'] : SKIP
      side = hash.key?('side') ? hash['side'] : SKIP
      token = hash.key?('token') ? hash['token'] : SKIP

      # Create object from extracted values.
      PrepaidCardDataResponse.new(card_image,
                                  card_number,
                                  cvv_number,
                                  expiration,
                                  name_on_card,
                                  side,
                                  token)
    end
  end
end
