# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Pqapiv2
  # Localized requirement description for display purposes
  class KeyValuePairLanguageTypeString < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Language type in IETF's BCP 47 format
    # @return [LanguageTypesEnum]
    attr_accessor :language

    # Translated string in the specified language
    # @return [String]
    attr_accessor :translation

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['language'] = 'language'
      @_hash['translation'] = 'translation'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        language
        translation
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(language = nil,
                   translation = nil)
      @language = language unless language == SKIP
      @translation = translation unless translation == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      language = hash.key?('language') ? hash['language'] : SKIP
      translation = hash.key?('translation') ? hash['translation'] : SKIP

      # Create object from extracted values.
      KeyValuePairLanguageTypeString.new(language,
                                         translation)
    end
  end
end
