# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Pqapiv2
  # Physical address of the business and other information, such as <i>Operating
  # Name</i>, <i>Registration ID</i>, etc.
  class BusinessInformation < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Legal name for the business
    # @return [String]
    attr_accessor :business_name

    # Name under which the business operates
    # @return [String]
    attr_accessor :business_operating_name

    # Registration number or ID assigned by a government body
    # @return [String]
    attr_accessor :business_registration_id

    # State, province, or territory where the business is registered
    # @return [String]
    attr_accessor :business_registration_region

    # Two-digit country code types
    # @return [CountryTypesEnum]
    attr_accessor :business_registration_country

    # Role of the user within the business
    # @return [BusinessContactRoleEnum]
    attr_accessor :business_contact_role

    # First line of the business address that specifies street number, street
    # name, and building name
    # @return [String]
    attr_accessor :business_address_line1

    # Second line of the business address that specifies the apartment, suite,
    # or space number (or any other designation not literally part of the
    # physical address)
    # @return [String]
    attr_accessor :business_address_line2

    # Third line of the business address that specifies the international or
    # business addresses that do not fit on businessAddressLine3
    # @return [String]
    attr_accessor :business_address_line3

    # fourth line of the business address street address
    # @return [String]
    attr_accessor :business_address_line4

    # Fifth line of the business address street address
    # @return [String]
    attr_accessor :business_address_line5

    # City the business is registered
    # @return [String]
    attr_accessor :business_city

    # State, province, or region the business is registered
    # @return [String]
    attr_accessor :business_region

    # Two-digit country code types
    # @return [CountryTypesEnum]
    attr_accessor :business_country

    # Postal code for the business address
    # @return [String]
    attr_accessor :business_postal_code

    # House number for the business address
    # @return [String]
    attr_accessor :business_premise_number

    # Type of business (<i>Corporation</i> or <i>Partnership</i>)
    # @return [BusinessTypesEnum]
    attr_accessor :business_type

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['business_name'] = 'businessName'
      @_hash['business_operating_name'] = 'businessOperatingName'
      @_hash['business_registration_id'] = 'businessRegistrationId'
      @_hash['business_registration_region'] = 'businessRegistrationRegion'
      @_hash['business_registration_country'] = 'businessRegistrationCountry'
      @_hash['business_contact_role'] = 'businessContactRole'
      @_hash['business_address_line1'] = 'businessAddressLine1'
      @_hash['business_address_line2'] = 'businessAddressLine2'
      @_hash['business_address_line3'] = 'businessAddressLine3'
      @_hash['business_address_line4'] = 'businessAddressLine4'
      @_hash['business_address_line5'] = 'businessAddressLine5'
      @_hash['business_city'] = 'businessCity'
      @_hash['business_region'] = 'businessRegion'
      @_hash['business_country'] = 'businessCountry'
      @_hash['business_postal_code'] = 'businessPostalCode'
      @_hash['business_premise_number'] = 'businessPremiseNumber'
      @_hash['business_type'] = 'businessType'
      @_hash
    end

    # An array for optional fields
    def optionals
      %w[
        business_name
        business_operating_name
        business_registration_id
        business_registration_region
        business_registration_country
        business_contact_role
        business_address_line1
        business_address_line2
        business_address_line3
        business_address_line4
        business_address_line5
        business_city
        business_region
        business_country
        business_postal_code
        business_premise_number
        business_type
      ]
    end

    # An array for nullable fields
    def nullables
      []
    end

    def initialize(business_name = nil,
                   business_operating_name = nil,
                   business_registration_id = nil,
                   business_registration_region = nil,
                   business_registration_country = nil,
                   business_contact_role = nil,
                   business_address_line1 = nil,
                   business_address_line2 = nil,
                   business_address_line3 = nil,
                   business_address_line4 = nil,
                   business_address_line5 = nil,
                   business_city = nil,
                   business_region = nil,
                   business_country = nil,
                   business_postal_code = nil,
                   business_premise_number = nil,
                   business_type = nil)
      @business_name = business_name unless business_name == SKIP
      @business_operating_name = business_operating_name unless business_operating_name == SKIP
      @business_registration_id = business_registration_id unless business_registration_id == SKIP
      unless business_registration_region == SKIP
        @business_registration_region =
          business_registration_region
      end
      unless business_registration_country == SKIP
        @business_registration_country =
          business_registration_country
      end
      @business_contact_role = business_contact_role unless business_contact_role == SKIP
      @business_address_line1 = business_address_line1 unless business_address_line1 == SKIP
      @business_address_line2 = business_address_line2 unless business_address_line2 == SKIP
      @business_address_line3 = business_address_line3 unless business_address_line3 == SKIP
      @business_address_line4 = business_address_line4 unless business_address_line4 == SKIP
      @business_address_line5 = business_address_line5 unless business_address_line5 == SKIP
      @business_city = business_city unless business_city == SKIP
      @business_region = business_region unless business_region == SKIP
      @business_country = business_country unless business_country == SKIP
      @business_postal_code = business_postal_code unless business_postal_code == SKIP
      @business_premise_number = business_premise_number unless business_premise_number == SKIP
      @business_type = business_type unless business_type == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      business_name = hash.key?('businessName') ? hash['businessName'] : SKIP
      business_operating_name =
        hash.key?('businessOperatingName') ? hash['businessOperatingName'] : SKIP
      business_registration_id =
        hash.key?('businessRegistrationId') ? hash['businessRegistrationId'] : SKIP
      business_registration_region =
        hash.key?('businessRegistrationRegion') ? hash['businessRegistrationRegion'] : SKIP
      business_registration_country =
        hash.key?('businessRegistrationCountry') ? hash['businessRegistrationCountry'] : SKIP
      business_contact_role =
        hash.key?('businessContactRole') ? hash['businessContactRole'] : SKIP
      business_address_line1 =
        hash.key?('businessAddressLine1') ? hash['businessAddressLine1'] : SKIP
      business_address_line2 =
        hash.key?('businessAddressLine2') ? hash['businessAddressLine2'] : SKIP
      business_address_line3 =
        hash.key?('businessAddressLine3') ? hash['businessAddressLine3'] : SKIP
      business_address_line4 =
        hash.key?('businessAddressLine4') ? hash['businessAddressLine4'] : SKIP
      business_address_line5 =
        hash.key?('businessAddressLine5') ? hash['businessAddressLine5'] : SKIP
      business_city = hash.key?('businessCity') ? hash['businessCity'] : SKIP
      business_region =
        hash.key?('businessRegion') ? hash['businessRegion'] : SKIP
      business_country =
        hash.key?('businessCountry') ? hash['businessCountry'] : SKIP
      business_postal_code =
        hash.key?('businessPostalCode') ? hash['businessPostalCode'] : SKIP
      business_premise_number =
        hash.key?('businessPremiseNumber') ? hash['businessPremiseNumber'] : SKIP
      business_type = hash.key?('businessType') ? hash['businessType'] : SKIP

      # Create object from extracted values.
      BusinessInformation.new(business_name,
                              business_operating_name,
                              business_registration_id,
                              business_registration_region,
                              business_registration_country,
                              business_contact_role,
                              business_address_line1,
                              business_address_line2,
                              business_address_line3,
                              business_address_line4,
                              business_address_line5,
                              business_city,
                              business_region,
                              business_country,
                              business_postal_code,
                              business_premise_number,
                              business_type)
    end
  end
end
