# pqapiv2
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Pqapiv2
  # WebhooksController
  class WebhooksController < BaseController
    def initialize(config, http_call_back: nil)
      super(config, http_call_back: http_call_back)
    end

    # Retrieve a list of all webhook subscriptions that supports filtering,
    # sorting, and pagination through existing mechanisms.
    # @param [String] x_my_pay_quicker_version Required parameter: Date-based
    # API Version specified in the header <i>required</i> on all calls.
    # @return [WebhookCollectionResponse] response from the API call
    def list_webhook_subscriptions(x_my_pay_quicker_version)
      # Prepare query url.
      _query_builder = config.get_base_uri
      _query_builder << '/webhooks'
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'accept' => 'application/json',
        'X-MyPayQuicker-Version' => x_my_pay_quicker_version
      }

      # Prepare and execute HttpRequest.
      _request = config.http_client.get(
        _query_url,
        headers: _headers
      )
      _response = execute_request(_request)
      validate_response(_response)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_response.raw_body)
      WebhookCollectionResponse.from_hash(decoded)
    end

    # Create a webhook subscription for a given URL and namespace. When this
    # event fires, the webhook receives a call from the API.
    # @param [String] x_my_pay_quicker_version Required parameter: Date-based
    # API Version specified in the header <i>required</i> on all calls.
    # @param [WebhookSubscription] body Optional parameter: Example:
    # @return [WebhookSubscriptionResponse] response from the API call
    def create_webhook_subscription(x_my_pay_quicker_version,
                                    body: nil)
      # Prepare query url.
      _query_builder = config.get_base_uri
      _query_builder << '/webhooks'
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'accept' => 'application/json',
        'X-MyPayQuicker-Version' => x_my_pay_quicker_version,
        'Content-Type' => 'application/json'
      }

      # Prepare and execute HttpRequest.
      _request = config.http_client.post(
        _query_url,
        headers: _headers,
        parameters: body.to_json
      )
      _response = execute_request(_request)
      validate_response(_response)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_response.raw_body)
      WebhookSubscriptionResponse.from_hash(decoded)
    end

    # Retrieve a single webhook subscription using the webhook token.
    # @param [String] webh_token Required parameter: Example:
    # @param [String] x_my_pay_quicker_version Required parameter: Date-based
    # API Version specified in the header <i>required</i> on all calls.
    # @return [WebhookSubscriptionResponse] response from the API call
    def retrieve_webhook_subscription(webh_token,
                                      x_my_pay_quicker_version)
      # Prepare query url.
      _query_builder = config.get_base_uri
      _query_builder << '/webhooks/{webh-token}'
      _query_builder = APIHelper.append_url_with_template_parameters(
        _query_builder,
        'webh-token' => { 'value' => webh_token, 'encode' => true }
      )
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'accept' => 'application/json',
        'X-MyPayQuicker-Version' => x_my_pay_quicker_version
      }

      # Prepare and execute HttpRequest.
      _request = config.http_client.get(
        _query_url,
        headers: _headers
      )
      _response = execute_request(_request)
      validate_response(_response)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_response.raw_body)
      WebhookSubscriptionResponse.from_hash(decoded)
    end

    # Delete a webhook subscription. Deleted webhooks no longer receive
    # notifications about events. Deleting an already deleted webhook will
    # result in a successful 200 (OK) response code.
    # @param [String] webh_token Required parameter: Example:
    # @param [String] x_my_pay_quicker_version Required parameter: Date-based
    # API Version specified in the header <i>required</i> on all calls.
    # @return [void] response from the API call
    def delete_webhook_subscription(webh_token,
                                    x_my_pay_quicker_version)
      # Prepare query url.
      _query_builder = config.get_base_uri
      _query_builder << '/webhooks/{webh-token}'
      _query_builder = APIHelper.append_url_with_template_parameters(
        _query_builder,
        'webh-token' => { 'value' => webh_token, 'encode' => true }
      )
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'X-MyPayQuicker-Version' => x_my_pay_quicker_version
      }

      # Prepare and execute HttpRequest.
      _request = config.http_client.delete(
        _query_url,
        headers: _headers
      )
      _response = execute_request(_request)
      validate_response(_response)
    end
  end
end
